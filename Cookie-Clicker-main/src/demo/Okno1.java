/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demo;

import static demo.Registracija.currentId;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Boolean.parseBoolean;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

/**
 *
 * @author Voixy
 */
public class Okno1 extends javax.swing.JFrame implements Runnable {

    double score = (int) (0);
    int autoclicker = 0;
    int grandma = 0;
    int farm = 0;
    int mine = 0;
    int factory = 0;
    boolean running = true;
    boolean pause = false;
    int timer = 0;
    int autoclickerCost = 15;
    int grandmaCost = 100;
    int farmCost = 1100;
    int mineCost = 12000;
    int factoryCost = 130000;
    double spers = 0;
    String[] profileParts;
    public static int workingId;
    int gc = 3;
    boolean visible = false;
    int vtime = 10;
    int gcCount = 0;
    int cursorM = 1;
    int autoclickerM = 1;
    int grandmaM = 1;
    int farmM = 1;
    int mineM = 1;
    int factoryM = 1;
    double gcM = 1;
    boolean u1b = false;
    boolean u2b = false;
    boolean u3b = false;
    boolean u4b = false;
    boolean u5b = false;
    boolean u6b = false;
    boolean u7b = false;
    boolean u8b = false;
    boolean u9b = false;
    boolean u10b = false;
    boolean u11b = false;
    boolean u12b = false;
    boolean u13b = false;
    boolean u14b = false;
    boolean u15b = false;
    boolean u16b = false;
    boolean u17b = false;
    boolean u18b = false;
    boolean u19b = false;
    boolean u20b = false;

    Thread t1;

    /**
     * Creates new form Okno1
     */
    public Okno1() {
        initComponents();

        updateU();

        golden.setVisible(false);

        workingId = currentId;

        String userProfile = loadUserProfile(currentId);
        profileParts = userProfile.split("#");

        this.setTitle("Cookie Clicker: " + profileParts[1]);

        ImageIcon img = new ImageIcon(profileParts[14]);
        this.setIconImage(img.getImage());

        set();
        updateCPS();

        jOptionPane1.setVisible(false);
        t1 = new Thread(this);
        t1.start();

        gamescore.setText("Score: " + (int) (score));

        sps.setText("CPS: " + Math.round((spers) * 10) / 10.0);

        if (autoclicker == 0) {
            jLabel1.setText("Cost: 15");
        } else {
            jLabel1.setText("Cost: " + autoclickerCost);
        }
        if (grandma == 0) {
            jLabel2.setText("Cost: 100");
        } else {
            jLabel2.setText("Cost: " + grandmaCost);
        }
        if (farm == 0) {
            jLabel3.setText("Cost: 1100");
        } else {
            jLabel3.setText("Cost: " + farmCost);
        }
        if (mine == 0) {
            jLabel4.setText("Cost: 12000");
        } else {
            jLabel4.setText("Cost: " + mineCost);
        }
        if (factory == 0) {
            jLabel5.setText("Cost: 130000");
        } else {
            jLabel5.setText("Cost: " + factoryCost);
        }
    }

    public void run() {
        while (running == true) {
            golden.setVisible(visible);
            gc -= 1;

            if (gc <= 0) {
                visible = true;
                golden.setVisible(visible);
                vtime--;
                if (vtime == 0) {
                    visible = false;
                    golden.setVisible(visible);
                    gc = (int) ((Math.random() * (1500 - 300 + 1) + 300) * gcM); // Reset the gc
                    vtime = 10;
                }
            } else {
                golden.setVisible(false);
            }

            // Update other components
            updateCPS();
            updateU();

            try {
                t1.sleep(1000);
                golden.setVisible(visible);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        golden = new javax.swing.JLabel();
        u6 = new javax.swing.JLabel();
        u7 = new javax.swing.JLabel();
        u8 = new javax.swing.JLabel();
        u9 = new javax.swing.JLabel();
        u10 = new javax.swing.JLabel();
        u5 = new javax.swing.JLabel();
        u4 = new javax.swing.JLabel();
        u3 = new javax.swing.JLabel();
        u2 = new javax.swing.JLabel();
        u1 = new javax.swing.JLabel();
        u20 = new javax.swing.JLabel();
        u19 = new javax.swing.JLabel();
        u18 = new javax.swing.JLabel();
        u17 = new javax.swing.JLabel();
        u16 = new javax.swing.JLabel();
        u15 = new javax.swing.JLabel();
        u14 = new javax.swing.JLabel();
        u13 = new javax.swing.JLabel();
        u12 = new javax.swing.JLabel();
        u11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cookie = new javax.swing.JLabel();
        autoclickerbutton = new javax.swing.JLabel();
        minebutton = new javax.swing.JLabel();
        grandmabutton = new javax.swing.JLabel();
        farmbutton = new javax.swing.JLabel();
        factorybutton = new javax.swing.JLabel();
        factorycounter = new javax.swing.JLabel();
        acounter = new javax.swing.JLabel();
        gcounter = new javax.swing.JLabel();
        farmcounter = new javax.swing.JLabel();
        mcounter = new javax.swing.JLabel();
        gamescore = new javax.swing.JLabel();
        sps = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        edit = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(960, 540));
        setMinimumSize(new java.awt.Dimension(960, 540));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jOptionPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(694, 426, -1, -1));

        golden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/GoldenCookieResize.gif"))); // NOI18N
        golden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goldenMouseClicked(evt);
            }
        });
        getContentPane().add(golden, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, 140, 150));

        u6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u6.png"))); // NOI18N
        u6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u6MouseClicked(evt);
            }
        });
        getContentPane().add(u6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, -1));

        u7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u7.png"))); // NOI18N
        u7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u7MouseClicked(evt);
            }
        });
        getContentPane().add(u7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));

        u8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u8.png"))); // NOI18N
        u8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u8MouseClicked(evt);
            }
        });
        getContentPane().add(u8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, -1, -1));

        u9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u9.png"))); // NOI18N
        u9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u9MouseClicked(evt);
            }
        });
        getContentPane().add(u9, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, -1, -1));

        u10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u10.png"))); // NOI18N
        u10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u10MouseClicked(evt);
            }
        });
        getContentPane().add(u10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, -1, -1));

        u5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u5.png"))); // NOI18N
        u5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u5MouseClicked(evt);
            }
        });
        getContentPane().add(u5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, -1, -1));

        u4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u4.png"))); // NOI18N
        u4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u4MouseClicked(evt);
            }
        });
        getContentPane().add(u4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, -1, -1));

        u3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u3.png"))); // NOI18N
        u3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u3MouseClicked(evt);
            }
        });
        getContentPane().add(u3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        u2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u2.png"))); // NOI18N
        u2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u2MouseClicked(evt);
            }
        });
        getContentPane().add(u2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        u1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u1.png"))); // NOI18N
        u1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u1MouseClicked(evt);
            }
        });
        getContentPane().add(u1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        u20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u20.png"))); // NOI18N
        u20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u20MouseClicked(evt);
            }
        });
        getContentPane().add(u20, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, -1, -1));

        u19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u19.png"))); // NOI18N
        u19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u19MouseClicked(evt);
            }
        });
        getContentPane().add(u19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 320, -1, -1));

        u18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u18.png"))); // NOI18N
        u18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u18MouseClicked(evt);
            }
        });
        getContentPane().add(u18, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, -1, -1));

        u17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u17.png"))); // NOI18N
        u17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u17MouseClicked(evt);
            }
        });
        getContentPane().add(u17, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, -1, -1));

        u16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u16.png"))); // NOI18N
        u16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u16MouseClicked(evt);
            }
        });
        getContentPane().add(u16, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, -1, -1));

        u15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u15.png"))); // NOI18N
        u15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u15MouseClicked(evt);
            }
        });
        getContentPane().add(u15, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));

        u14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u14.png"))); // NOI18N
        u14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u14MouseClicked(evt);
            }
        });
        getContentPane().add(u14, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        u13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u13.png"))); // NOI18N
        u13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u13MouseClicked(evt);
            }
        });
        getContentPane().add(u13, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        u12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u12.png"))); // NOI18N
        u12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u12MouseClicked(evt);
            }
        });
        getContentPane().add(u12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, -1));

        u11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/u11.png"))); // NOI18N
        u11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                u11MouseClicked(evt);
            }
        });
        getContentPane().add(u11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, -1, -1));

        jLabel1.setFont(new java.awt.Font("Burbank Big Rg Bd", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 58, 130, 20));

        jLabel2.setFont(new java.awt.Font("Burbank Big Rg Bd", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 146, 130, 20));

        jLabel3.setFont(new java.awt.Font("Burbank Big Rg Bd", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(806, 230, 120, 20));

        jLabel4.setFont(new java.awt.Font("Burbank Big Rg Bd", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 310, 120, 20));

        jLabel5.setFont(new java.awt.Font("Burbank Big Rg Bd", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 392, 120, 20));

        cookie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/Cookie.gif"))); // NOI18N
        cookie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cookieMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cookieMousePressed(evt);
            }
        });
        getContentPane().add(cookie, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        autoclickerbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/autoclicker.png"))); // NOI18N
        autoclickerbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                autoclickerbuttonMouseClicked(evt);
            }
        });
        getContentPane().add(autoclickerbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(742, 18, 196, -1));

        minebutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/mine.png"))); // NOI18N
        minebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minebuttonMouseClicked(evt);
            }
        });
        getContentPane().add(minebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(746, 272, 196, -1));

        grandmabutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/grandma.png"))); // NOI18N
        grandmabutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grandmabuttonMouseClicked(evt);
            }
        });
        getContentPane().add(grandmabutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 106, 196, -1));

        farmbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/farm (2).png"))); // NOI18N
        farmbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                farmbuttonMouseClicked(evt);
            }
        });
        getContentPane().add(farmbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 190, 196, -1));

        factorybutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/factory.png"))); // NOI18N
        factorybutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                factorybuttonMouseClicked(evt);
            }
        });
        getContentPane().add(factorybutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(748, 352, 196, -1));

        factorycounter.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 48)); // NOI18N
        factorycounter.setForeground(new java.awt.Color(255, 255, 255));
        factorycounter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        factorycounter.setText("0");
        getContentPane().add(factorycounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 366, 76, 50));

        acounter.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 48)); // NOI18N
        acounter.setForeground(new java.awt.Color(255, 255, 255));
        acounter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        acounter.setText("0");
        getContentPane().add(acounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 34, 76, 50));

        gcounter.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 48)); // NOI18N
        gcounter.setForeground(new java.awt.Color(255, 255, 255));
        gcounter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gcounter.setText("0");
        getContentPane().add(gcounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 120, 76, 50));

        farmcounter.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 48)); // NOI18N
        farmcounter.setForeground(new java.awt.Color(255, 255, 255));
        farmcounter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        farmcounter.setText("0");
        getContentPane().add(farmcounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 206, 76, 50));

        mcounter.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 48)); // NOI18N
        mcounter.setForeground(new java.awt.Color(255, 255, 255));
        mcounter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mcounter.setText("0");
        getContentPane().add(mcounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 288, 76, 50));

        gamescore.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 36)); // NOI18N
        gamescore.setForeground(new java.awt.Color(255, 255, 255));
        gamescore.setText("Score: 0");
        getContentPane().add(gamescore, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 620, -1));

        sps.setFont(new java.awt.Font("Burbank Big Rg Bk", 0, 24)); // NOI18N
        sps.setForeground(new java.awt.Color(255, 255, 255));
        sps.setText("CPS: 0");
        getContentPane().add(sps, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 260, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/game.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, -20, -1, -1));

        jMenu1.setText("Options");

        edit.setText("Edit profile");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jMenu1.add(edit);

        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Logout");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        saveGame();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        saveGame();
        new UvodnaStran().setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void cookieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cookieMouseClicked
        score += cursorM;
        gamescore.setText("Score: " + (int) (score));
    }//GEN-LAST:event_cookieMouseClicked

    private void cookieMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cookieMousePressed

    }//GEN-LAST:event_cookieMousePressed

    private void autoclickerbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoclickerbuttonMouseClicked
        if (score >= autoclickerCost) {
            score = (int) (score - autoclickerCost);
            gamescore.setText("Score: " + (int) (score));
            autoclicker++;
            updateCPS();
            autoclickerCost = (int) (Math.round((15 * Math.pow(1.15, autoclicker)) * 10) / 10.0);
            jLabel1.setText("Cost: " + autoclickerCost);
            acounter.setText(autoclicker + "");
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies!");
        }
    }//GEN-LAST:event_autoclickerbuttonMouseClicked

    private void minebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minebuttonMouseClicked
        if (score >= mineCost) {
            score = (int) (score - mineCost);
            gamescore.setText("Score: " + (int) (score));
            mine++;
            updateCPS();
            mineCost = (int) (Math.round((12000 * Math.pow(1.15, mine)) * 10) / 10.0);
            jLabel4.setText("Cost: " + mineCost);
            mcounter.setText(mine + "");
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies!");
        }
    }//GEN-LAST:event_minebuttonMouseClicked

    private void grandmabuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grandmabuttonMouseClicked
        if (score >= grandmaCost) {
            score = (int) (score - grandmaCost);
            gamescore.setText("Score: " + (int) (score));
            grandma++;
            updateCPS();
            grandmaCost = (int) (Math.round((100 * Math.pow(1.15, grandma)) * 10) / 10.0);
            jLabel2.setText("Cost: " + grandmaCost);
            gcounter.setText(grandma + "");
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies!");
        }
    }//GEN-LAST:event_grandmabuttonMouseClicked

    private void farmbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_farmbuttonMouseClicked
        if (score >= farmCost) {
            score = (int) (score - farmCost);
            gamescore.setText("Score: " + (int) (score));
            farm++;
            updateCPS();
            farmCost = (int) (Math.round((1100 * Math.pow(1.15, farm)) * 10) / 10.0);
            jLabel3.setText("Cost: " + farmCost);
            farmcounter.setText(farm + "");
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies!");
        }
    }//GEN-LAST:event_farmbuttonMouseClicked

    private void factorybuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_factorybuttonMouseClicked
        if (score >= factoryCost) {
            score = (int) (score - factoryCost);
            gamescore.setText("Score: " + (int) (score));
            factory++;
            updateCPS();
            factoryCost = (int) (Math.round((130000 * Math.pow(1.15, factory)) * 10) / 10.0);
            jLabel5.setText("Cost: " + factoryCost);
            factorycounter.setText(factory + "");
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies!");
        }
    }//GEN-LAST:event_factorybuttonMouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        saveGame();
        new EditProfile().setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void goldenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goldenMouseClicked
        visible = false;
        gc = (int) ((Math.random() * (1500 - 300 + 1) + 300) * gcM);
        vtime = 10;
        int s = (int) Math.round(Math.random());
        switch (s) {
            case 0:
                score += (int) (score * 0.15 + 13);
                break; // Add a break statement to exit the switch statement
            case 1:
                score += (int) (spers * 900 + 13);
                break; // Add a break statement to exit the switch statement
        }
        gcCount++;
        gamescore.setText("Score: " + (int) (score));
    }//GEN-LAST:event_goldenMouseClicked

    private void u1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u1MouseClicked
        if (score >= 100) {
            score = (int) (score - 100);
            gamescore.setText("Score: " + (int) (score));
            cursorM *= 2;
            autoclickerM *= 2;
            updateCPS();
            u1b = true;
            u1.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 100!");
        }
    }//GEN-LAST:event_u1MouseClicked

    private void u2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u2MouseClicked
        if (score >= 500) {
            score = (int) (score - 500);
            gamescore.setText("Score: " + (int) (score));
            cursorM *= 2;
            autoclickerM *= 2;
            updateCPS();
            u2b = true;
            u2.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 500!");
        }
    }//GEN-LAST:event_u2MouseClicked

    private void u3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u3MouseClicked
        if (score >= 10000) {
            score = (int) (score - 10000);
            gamescore.setText("Score: " + (int) (score));
            cursorM *= 2;
            autoclickerM *= 2;
            updateCPS();
            u3b = true;
            u3.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 10000!");
        }
    }//GEN-LAST:event_u3MouseClicked

    private void u4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u4MouseClicked
        if (score >= 100000) {
            score = (int) (score - 100000);
            gamescore.setText("Score: " + (int) (score));
            cursorM *= 2;
            autoclickerM *= 2;
            updateCPS();
            u4b = true;
            u4.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 100000!");
        }
    }//GEN-LAST:event_u4MouseClicked

    private void u5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u5MouseClicked
        if (score >= 10000000) {
            score = (int) (score - 10000000);
            gamescore.setText("Score: " + (int) (score));
            cursorM *= 2;
            autoclickerM *= 2;
            updateCPS();
            u5b = true;
            u5.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 10000000!");
        }
    }//GEN-LAST:event_u5MouseClicked

    private void u6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u6MouseClicked
        if (score >= 1000) {
            score = (int) (score - 1000);
            gamescore.setText("Score: " + (int) (score));
            grandmaM *= 2;
            updateCPS();
            u6b = true;
            u6.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 1000!");
        }
    }//GEN-LAST:event_u6MouseClicked

    private void u7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u7MouseClicked
        if (score >= 5000) {
            score = (int) (score - 5000);
            gamescore.setText("Score: " + (int) (score));
            grandmaM *= 2;
            updateCPS();
            u7b = true;
            u7.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 5000!");
        }
    }//GEN-LAST:event_u7MouseClicked

    private void u8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u8MouseClicked
        if (score >= 50000) {
            score = (int) (score - 50000);
            gamescore.setText("Score: " + (int) (score));
            grandmaM *= 2;
            updateCPS();
            u8b = true;
            u8.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 50000!");
        }
    }//GEN-LAST:event_u8MouseClicked

    private void u9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u9MouseClicked
        if (score >= 5000000) {
            score = (int) (score - 5000000);
            gamescore.setText("Score: " + (int) (score));
            grandmaM *= 2;
            updateCPS();
            u9b = true;
            u9.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 5000000!");
        }
    }//GEN-LAST:event_u9MouseClicked

    private void u10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u10MouseClicked
        if (score >= 11000) {
            score = (int) (score - 11000);
            gamescore.setText("Score: " + (int) (score));
            farmM *= 2;
            updateCPS();
            u10b = true;
            u10.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 11000!");
        }
    }//GEN-LAST:event_u10MouseClicked

    private void u11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u11MouseClicked
        if (score >= 55000) {
            score = (int) (score - 55000);
            gamescore.setText("Score: " + (int) (score));
            farmM *= 2;
            updateCPS();
            u11b = true;
            u11.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 55000!");
        }
    }//GEN-LAST:event_u11MouseClicked

    private void u12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u12MouseClicked
        if (score >= 550000) {
            score = (int) (score - 550000);
            gamescore.setText("Score: " + (int) (score));
            farmM *= 2;
            updateCPS();
            u12b = true;
            u12.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 550000!");
        }
    }//GEN-LAST:event_u12MouseClicked

    private void u13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u13MouseClicked
        if (score >= 120000) {
            score = (int) (score - 120000);
            gamescore.setText("Score: " + (int) (score));
            mineM *= 2;
            updateCPS();
            u13b = true;
            u13.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 120000!");
        }
    }//GEN-LAST:event_u13MouseClicked

    private void u14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u14MouseClicked
        if (score >= 600000) {
            score = (int) (score - 600000);
            gamescore.setText("Score: " + (int) (score));
            mineM *= 2;
            updateCPS();
            u14b = true;
            u14.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 600000!");
        }
    }//GEN-LAST:event_u14MouseClicked

    private void u15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u15MouseClicked
        if (score >= 6000000) {
            score = (int) (score - 6000000);
            gamescore.setText("Score: " + (int) (score));
            mineM *= 2;
            updateCPS();
            u15b = true;
            u15.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 6000000!");
        }
    }//GEN-LAST:event_u15MouseClicked

    private void u16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u16MouseClicked
        if (score >= 1300000) {
            score = (int) (score - 1300000);
            gamescore.setText("Score: " + (int) (score));
            factoryM *= 2;
            updateCPS();
            u16b = true;
            u16.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 1300000!");
        }
    }//GEN-LAST:event_u16MouseClicked

    private void u17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u17MouseClicked
        if (score >= 6500000) {
            score = (int) (score - 6500000);
            gamescore.setText("Score: " + (int) (score));
            factoryM *= 2;
            updateCPS();
            u17b = true;
            u17.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 6500000!");
        }
    }//GEN-LAST:event_u17MouseClicked

    private void u18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u18MouseClicked
        if (score >= 7777) {
            score = (int) (score - 7777);
            gamescore.setText("Score: " + (int) (score));
            gcM -= gcM * 0.5;
            updateCPS();
            u18b = true;
            u18.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 7777!");
        }
    }//GEN-LAST:event_u18MouseClicked

    private void u19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u19MouseClicked
        if (score >= 77777) {
            score = (int) (score - 77777);
            gamescore.setText("Score: " + (int) (score));
            gcM -= gcM * 0.5;
            updateCPS();
            u19b = true;
            u19.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 77777!");
        }
    }//GEN-LAST:event_u19MouseClicked

    private void u20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u20MouseClicked
        if (score >= 7777777) {
            score = (int) (score - 7777777);
            gamescore.setText("Score: " + (int) (score));
            gcM -= gcM * 0.5;
            updateCPS();
            u20b = true;
            u20.setVisible(false);
        } else {
            jOptionPane1.showMessageDialog(null, "You don't have enough cookies: 7777777!");
        }
    }//GEN-LAST:event_u20MouseClicked

    /**
     * @param args the command line arguments
     */
    public String loadUserProfile(int currentId) {
        String userProfile = null;

        try (BufferedReader br = new BufferedReader(new FileReader("UserData.txt"))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split("#");

                if (parts.length > 0 && Integer.parseInt(parts[0]) == currentId) {
                    userProfile = line;
                    break;
                }
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return userProfile;
    }

    public void updateCPS() {
        spers = (0.1 * autoclicker * autoclickerM) + (1 * grandma * grandmaM) + (8 * farm * farmM) + (47 * mine * mineM) + (260 * factory * factoryM);
        score = Math.round((score + spers) * 10) / 10.0;
        gamescore.setText("Score: " + (int) (score));
        spers = (0.1 * autoclicker * autoclickerM) + (1 * grandma * grandmaM) + (8 * farm * farmM) + (47 * mine * mineM) + (260 * factory * factoryM);
        sps.setText("CPS: " + Math.round((spers) * 10) / 10.0);
    }

    public void updateU() {
        if (autoclicker > 0 && u1b == false) {
            u1.setVisible(true);
            u2.setVisible(true);
        } else {
            u1.setVisible(false);
            u2.setVisible(false);
        }
        if (autoclicker > 0 && u2b == false) {
            u2.setVisible(true);
        } else {
            u2.setVisible(false);
        }
        if (autoclicker > 9 && u3b == false) {
            u3.setVisible(true);
        } else {
            u3.setVisible(false);
        }
        if (autoclicker > 24 && u4b == false) {
            u4.setVisible(true);
        } else {
            u4.setVisible(false);
        }
        if (autoclicker > 49 && u5b == false) {
            u5.setVisible(true);
        } else {
            u5.setVisible(false);
        }
        if (grandma > 0 && u6b == false) {
            u6.setVisible(true);
        } else {
            u6.setVisible(false);
        }
        if (grandma > 4 && u7b == false) {
            u7.setVisible(true);
        } else {
            u7.setVisible(false);
        }
        if (grandma > 24 && u8b == false) {
            u8.setVisible(true);
        } else {
            u8.setVisible(false);
        }
        if (grandma > 49 && u9b == false) {
            u9.setVisible(true);
        } else {
            u9.setVisible(false);
        }
        if (farm > 0 && u10b == false) {
            u10.setVisible(true);
        } else {
            u10.setVisible(false);
        }
        if (farm > 4 && u11b == false) {
            u11.setVisible(true);
        } else {
            u11.setVisible(false);
        }
        if (farm > 24 && u12b == false) {
            u12.setVisible(true);
        } else {
            u12.setVisible(false);
        }
        if (mine > 0 && u13b == false) {
            u13.setVisible(true);
        } else {
            u13.setVisible(false);
        }
        if (mine > 4 && u14b == false) {
            u14.setVisible(true);
        } else {
            u14.setVisible(false);
        }
        if (mine > 24 && u15b == false) {
            u15.setVisible(true);
        } else {
            u15.setVisible(false);
        }
        if (factory > 0 && u16b == false) {
            u16.setVisible(true);
        } else {
            u16.setVisible(false);
        }
        if (factory > 4 && u17b == false) {
            u17.setVisible(true);
        } else {
            u17.setVisible(false);
        }
        if (gcCount > 4 && u18b == false) {
            u18.setVisible(true);
        } else {
            u18.setVisible(false);
        }
        if (gcCount > 9 && u19b == false) {
            u19.setVisible(true);
        } else {
            u19.setVisible(false);
        }
        if (gcCount > 24 && u20b == false) {
            u20.setVisible(true);
        } else {
            u20.setVisible(false);
        }
    }

    public void set() {
        String filePath = "saves/" + profileParts[1] + ".txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            while (br.ready()) {
                score = (int) (Double.parseDouble(br.readLine()));
                spers = Double.parseDouble(br.readLine());
                gamescore.setText("Score: " + (int) (score));
                autoclicker = Integer.parseInt(br.readLine());
                if (autoclicker > 0) {
                    acounter.setText(autoclicker + "");
                }
                autoclickerCost = Integer.parseInt(br.readLine());
                if (autoclicker > 0) {
                    autoclickerCost = (int) (Math.round((15 * Math.pow(1.15, autoclicker)) * 10) / 10.0);
                }
                jLabel1.setText(autoclickerCost + "");

                grandma = Integer.parseInt(br.readLine());
                if (grandma > 0) {
                    gcounter.setText(grandma + "");
                }
                grandmaCost = Integer.parseInt(br.readLine());
                if (grandma > 0) {
                    grandmaCost = (int) (Math.round((100 * Math.pow(1.15, grandma)) * 10) / 10.0);
                }

                farm = Integer.parseInt(br.readLine());
                if (farm > 0) {
                    farmcounter.setText(farm + "");
                }
                farmCost = Integer.parseInt(br.readLine());
                if (farm > 0) {
                    farmCost = (int) (Math.round((1100 * Math.pow(1.15, farm)) * 10) / 10.0);
                }

                mine = Integer.parseInt(br.readLine());
                if (mine > 0) {
                    mcounter.setText(mine + "");
                }
                mineCost = Integer.parseInt(br.readLine());
                if (mine > 0) {
                    mineCost = (int) (Math.round((12000 * Math.pow(1.15, mine)) * 10) / 10.0);
                }

                factory = Integer.parseInt(br.readLine());
                if (factory > 0) {
                    factorycounter.setText(factory + "");
                }
                factoryCost = Integer.parseInt(br.readLine());
                if (factory > 0) {
                    factoryCost = (int) (Math.round((130000 * Math.pow(1.15, factory)) * 10) / 10.0);
                }
                cursorM = Integer.parseInt(br.readLine());
                autoclickerM = Integer.parseInt(br.readLine());
                grandmaM = Integer.parseInt(br.readLine());
                farmM = Integer.parseInt(br.readLine());
                mineM = Integer.parseInt(br.readLine());
                factoryM = Integer.parseInt(br.readLine());
                gcM = Double.parseDouble(br.readLine());
                u1b = parseBoolean(br.readLine());
                u2b = parseBoolean(br.readLine());
                u3b = parseBoolean(br.readLine());
                u4b = parseBoolean(br.readLine());
                u5b = parseBoolean(br.readLine());
                u6b = parseBoolean(br.readLine());
                u7b = parseBoolean(br.readLine());
                u8b = parseBoolean(br.readLine());
                u9b = parseBoolean(br.readLine());
                u10b = parseBoolean(br.readLine());
                u11b = parseBoolean(br.readLine());
                u12b = parseBoolean(br.readLine());
                u13b = parseBoolean(br.readLine());
                u14b = parseBoolean(br.readLine());
                u15b = parseBoolean(br.readLine());
                u16b = parseBoolean(br.readLine());
                u17b = parseBoolean(br.readLine());
                u18b = parseBoolean(br.readLine());
                u19b = parseBoolean(br.readLine());
                u20b = parseBoolean(br.readLine());
                gcCount = Integer.parseInt(br.readLine());
            }
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Okno1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void saveGame() {
        try {
            String filePath = "saves/" + profileParts[1] + ".txt";
            PrintWriter pw = new PrintWriter(new FileWriter(filePath));
            pw.println(score);
            pw.println(spers);
            pw.println(autoclicker);
            pw.println(autoclickerCost);
            pw.println(grandma);
            pw.println(grandmaCost);
            pw.println(farm);
            pw.println(farmCost);
            pw.println(mine);
            pw.println(mineCost);
            pw.println(factory);
            pw.println(factoryCost);
            pw.println(cursorM);
            pw.println(autoclickerM);
            pw.println(grandmaM);
            pw.println(farmM);
            pw.println(mineM);
            pw.println(factoryM);
            pw.println(gcM);
            pw.println(u1b);
            pw.println(u2b);
            pw.println(u3b);
            pw.println(u4b);
            pw.println(u5b);
            pw.println(u6b);
            pw.println(u7b);
            pw.println(u8b);
            pw.println(u9b);
            pw.println(u10b);
            pw.println(u11b);
            pw.println(u12b);
            pw.println(u13b);
            pw.println(u14b);
            pw.println(u15b);
            pw.println(u16b);
            pw.println(u17b);
            pw.println(u18b);
            pw.println(u19b);
            pw.println(u20b);
            pw.println(gcCount);
            pw.close();

        } catch (IOException ex) {
            Logger.getLogger(Okno1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Okno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Okno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Okno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Okno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Okno1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acounter;
    private javax.swing.JLabel autoclickerbutton;
    private javax.swing.JLabel background;
    private javax.swing.JLabel cookie;
    private javax.swing.JMenuItem edit;
    private javax.swing.JLabel factorybutton;
    private javax.swing.JLabel factorycounter;
    private javax.swing.JLabel farmbutton;
    private javax.swing.JLabel farmcounter;
    private javax.swing.JLabel gamescore;
    private javax.swing.JLabel gcounter;
    private javax.swing.JLabel golden;
    private javax.swing.JLabel grandmabutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JLabel mcounter;
    private javax.swing.JLabel minebutton;
    private javax.swing.JLabel sps;
    private javax.swing.JLabel u1;
    private javax.swing.JLabel u10;
    private javax.swing.JLabel u11;
    private javax.swing.JLabel u12;
    private javax.swing.JLabel u13;
    private javax.swing.JLabel u14;
    private javax.swing.JLabel u15;
    private javax.swing.JLabel u16;
    private javax.swing.JLabel u17;
    private javax.swing.JLabel u18;
    private javax.swing.JLabel u19;
    private javax.swing.JLabel u2;
    private javax.swing.JLabel u20;
    private javax.swing.JLabel u3;
    private javax.swing.JLabel u4;
    private javax.swing.JLabel u5;
    private javax.swing.JLabel u6;
    private javax.swing.JLabel u7;
    private javax.swing.JLabel u8;
    private javax.swing.JLabel u9;
    // End of variables declaration//GEN-END:variables
}
